<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>shader_script</string>
	</array>
	<key>foldingStartMarker</key>
	<string>^\s*\b(function|local\s+function|if|for)\b|{[ \t]*$|\[\[</string>
	<key>foldingStopMarker</key>
	<string>\bend\b|^\s*}|\]\]</string>
	<key>keyEquivalent</key>
	<string>^~L</string>
	<key>name</key>
	<string>shader_script</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.shader_script</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.scope.shader_script</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.shader_script</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.shader_script</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.shader_script</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.shader_script</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(function)\s+([a-zA-Z_.0-9:]+[.:])?([a-zA-Z_]\w*)\s*(\()([^)]*)(\))</string>
			<key>name</key>
			<string>meta.function.shader_script</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![\d.])\s0x[a-fA-F\d]+|\b\d+(\.\d+)?([eE]-?\d+)?|\.\d+([eE]-?\d+)?</string>
			<key>name</key>
			<string>constant.numeric.shader_script</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.shader_script</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.shader_script</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.shader_script</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.shader_script</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.shader_script</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.shader_script</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.shader_script</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.shader_script</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;!--)\[(=*)\[</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.string.begin.shader_script</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\]\1\]</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.string.end.shader_script</string>
				</dict>
			</dict>
			<key>name</key>
			<string>text source.embedded_glsl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.embedded_glsl</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>--\[(=*)\[</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.shader_script</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\]\1\]</string>
			<key>name</key>
			<string>comment.block.shader_script</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.shader_script</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(--)(?!\[\[).*$\n?</string>
			<key>name</key>
			<string>comment.line.double-dash.shader_script</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(branch|variants|break|do|else|for|if|elseif|return|then|repeat|while|until|end|function|local|in)\b</string>
			<key>name</key>
			<string>keyword.control.shader_script</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(pass)\b</string>
			<key>name</key>
			<string>keyword.type.data.shader_script</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(shader|source)\s*['"](.*)['"]</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.type.data.shader_scrip</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.data_name.shader_script</string>
				</dict>
			</dict>
			<key>name</key>
			<string>keyword.type.data.shader_script</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(uniform|context|context_default|program_vertex|program_fragment|program_tessellation|program_geometry|attribute)\b</string>
			<key>name</key>
			<string>keyword.variable.field.shader_script</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![^.]\.|:)\b(false|nil|true|_G|_VERSION|math\.(pi|huge))\b|(?&lt;![.])\.{3}(?!\.)</string>
			<key>name</key>
			<string>constant.language.shader_script</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![^.]\.|:)\b(std140|static|dynamic|shared)\b|(?&lt;![.])\.{3}(?!\.)</string>
			<key>name</key>
			<string>string.setting.shader_script</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![^.]\.|:)\b(WORLD|WORLD_VIEW|WORLD_VIEW_INV|WORLD_VIEW_PROJ|WORLD_VIEW_PROJ_INV|CLIP_TO_DISPLAY_MTX|CLIP_TO_MODEL_MTX|CLIP_TO_VIEW_MTX|CLIP_TO_WINDOW_MTX|CLIP_TO_WORLD_MTX|DISPLAY_TO_CLIP_MTX|DISPLAY_TO_MODEL_MTX|DISPLAY_TO_VIEW_MTX|DISPLAY_TO_WORLD_MTX|MODEL_TO_CLIP_MTX|MODEL_TO_DISPLAY_MTX|MODEL_TO_UV_MTX|MODEL_TO_VIEW_MTX|MODEL_TO_WORLD_MTX|NORMAL_CLIP_TO_DISPLAY_MTX|NORMAL_CLIP_TO_MODEL_MTX|NORMAL_CLIP_TO_VIEW_MTX|NORMAL_CLIP_TO_WINDOW_MTX|NORMAL_CLIP_TO_WORLD_MTX|NORMAL_DISPLAY_TO_CLIP_MTX|NORMAL_DISPLAY_TO_MODEL_MTX|NORMAL_DISPLAY_TO_VIEW_MTX|NORMAL_DISPLAY_TO_WORLD_MTX|NORMAL_MODEL_TO_CLIP_MTX|NORMAL_MODEL_TO_DISPLAY_MTX|NORMAL_MODEL_TO_UV_MTX|NORMAL_MODEL_TO_VIEW_MTX|NORMAL_MODEL_TO_WORLD_MTX|NORMAL_WORLD_TO_DISPLAY_MTX|NORMAL_WORLD_TO_VIEW_MTX|NORMAL_UV_TO_MODEL_MTX|NORMAL_VIEW_TO_CLIP_MTX|NORMAL_VIEW_TO_DISPLAY_MTX|NORMAL_VIEW_TO_MODEL_MTX|NORMAL_VIEW_TO_WORLD_MTX|NORMAL_WINDOW_TO_CLIP_MTX|NORMAL_WORLD_TO_CLIP_MTX|NORMAL_WORLD_TO_MODEL_MTX|PEN_COLOR|UV_TO_MODEL_MTX|VIEW_TO_CLIP_MTX|VIEW_TO_DISPLAY_MTX|VIEW_TO_MODEL_MTX|VIEW_TO_WORLD_MTX|WINDOW_TO_CLIP_MTX|WORLD_TO_CLIP_MTX|WORLD_TO_DISPLAY_MTX|WORLD_TO_MODEL_MTX|WORLD_TO_VIEW_MTX|VIEW_HEIGHT|VIEW_WIDTH|VIEW_HALF_HEIGHT|VIEW_HALF_WIDTH)\b|(?&lt;![.])\.{3}(?!\.)</string>
			<key>name</key>
			<string>constant.global_types.shader_script</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(block|global|global_block|sampler|float|int|mat4|vec4|vec3|mat3|script)\b\s*(?=[({])</string>
			<key>name</key>
			<string>keyword.variable.global_types.shader_script</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![^.]\.|:)\b(self)\b</string>
			<key>name</key>
			<string>variable.language.self.shader_script</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![^.]\.|:)\b(assert|collectgarbage|dofile|error|getfenv|getmetatable|ipairs|loadfile|loadstring|module|next|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|tonumber|tostring|type|unpack|xpcall)\b(?=[( {])</string>
			<key>name</key>
			<string>support.function.shader_script</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![^.]\.|:)\b(coroutine\.(create|resume|running|status|wrap|yield)|string\.(byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\.(concat|insert|maxn|remove|sort)|math\.(abs|acos|asin|atan2?|ceil|cosh?|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pow|rad|random|randomseed|sinh?|sqrt|tanh?)|io\.(close|flush|input|lines|open|output|popen|read|tmpfile|type|write)|os\.(clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\.(cpath|loaded|loadlib|path|preload|seeall)|debug\.(debug|[gs]etfenv|[gs]ethook|getinfo|[gs]etlocal|[gs]etmetatable|getregistry|[gs]etupvalue|traceback))\b(?=[( {])</string>
			<key>name</key>
			<string>support.function.library.shader_script</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(and|or|not)\b</string>
			<key>name</key>
			<string>keyword.operator.shader_script</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\[|\]|\{|\}|;|\+|-|%|#|\*|\/|\^|==?|~=|&lt;=?|&gt;=?|(?&lt;!\.)\.{2}(?!\.)</string>
			<key>name</key>
			<string>keyword.operator.shader_script</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.shader_script</string>
	<key>uuid</key>
	<string>75926274-CB47-49EF-B095-9FAE69BCB9A7</string>
</dict>
</plist>